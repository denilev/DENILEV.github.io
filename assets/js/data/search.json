[ { "title": "Пирамида логических уровней Роберта Дилтса.", "url": "/posts/Dilts-Pyramid/", "categories": "Публикации", "tags": "осознание", "date": "2022-05-18 09:10:00 +0300", "snippet": "Пирамида Дилтса является одной из важнейших моделей НЛП и коучинга.Она показывает то, каким образом наши представления о себе, ценности и убеждения оказывают непосредственное влияние на наши поступки, решения и окружающую действительность.Пирамида помогает разобраться в себе, лучше понять себя, предлагая найти ответы на вопросы: “Кто я?” и “Зачем” что-то есть или чего-то нет в моей жизни.Это должен знать каждый.Задание: Личность или бизнес через пирамиду Дилтса. Построить, ответить на вопросы. " }, { "title": "Python. DeFi автоматизация процессов.", "url": "/posts/Automation-In-DeFi/", "categories": "Блокчейн, Python", "tags": "Автоматизация", "date": "2022-05-17 18:26:00 +0300", "snippet": "Автматизировать и ускорить, задать исполнение по расписанию любому процессу в блокчейне. Любые кнопки нажимаются сами. Быстро купить токен на самом старте продаж. .env Добавляю здесь новый код по мере практики.Общее описание исходного фрагмента кода.Готовим среду для последующего взаимодействия подключаем библиотеки, которые понадобятся явно указываем что будем работать с полигоном (способ получения информации из блокчейна и записи в него) аккаунт приват ключ-из приватного создаём публичныйсохраняем в переменную для удобства использования принт пишет тру при успехе подключенияГде посмотреть в эксплорере функцию транзакции (что происходит) :клик на хеш, вкладка Overview, Click to see More, Input Data:ApeSwapFunction: swapExactTokensForETH(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) ***QuickSwap:Function: swapExactETHForTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline)from web3 import Web3import jsonimport timeimport osimport settings # dotenvpolygon_url = &quot;https://rpc-mumbai.matic.today/&quot;web3 = Web3(Web3.HTTPProvider(polygon_url))privateKey = os.getenv(&quot;PRIVATE_KEY&quot;)account = web3.eth.account.privateKeyToAccount(privateKey)publicKey = account.addressweb3.eth.defaultAccount = account.addressprint(web3.isConnected())while True: # зациклить операцию бесконечно - внизу таймер nonce = web3.eth.getTransactionCount(web3.eth.defaultAccount) myData = &#39;0xd204c45e0000000000000000000000007fee397e3058abced3e4ffa9be84f25506b8964d0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000005a68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d653857564b795361374e4574555178654353515a774e695a314d72525273636945764b6e7679585a785274702f4173616d692e6a7067000000000000&#39; address = Web3.toChecksumAddress(&#39;0x1C1E0d77dcA2882628545D40aEea86Eb5C3A42D9&#39;) tx = { &#39;from&#39; : publicKey, &#39;nonce&#39; : nonce, &#39;gasPrice&#39; : web3.toWei(35, &#39;gwei&#39;), # GAS: Standard_31.4(Gwei), Fast_36(Gwei) https://polygonscan.com/gastracker &#39;gas&#39; : 1500000, &#39;to&#39; : address, &#39;data&#39; : myData, &#39;chainId&#39;: 80001 # в настройке сети ID цепочки } signed_tx = web3.eth.account.sign_transaction(tx, privateKey) tx_hash = web3.eth.send_raw_transaction(signed_tx.rawTransaction) time.sleep(10*3) # таймаут в цикле, первое число секунды, умноженное на что-то, (10*3)-это 30 секунд.settings.py# settings.py## importing the load_dotenv from the python-dotenv modulefrom dotenv import load_dotenv## using existing module to specify location of the .env filefrom pathlib import Pathload_dotenv()env_path = Path(&#39;.&#39;)/&#39;.env&#39;load_dotenv(dotenv_path=env_path)# retrieving keys and adding them to the project# from the .env file through their key names# PRIVATE_KEY = os.getenv(&quot;PRIVATE_KEY&quot;) - пример использования в моём коде .env файлPRIVATE_KEY=*******************************" }, { "title": "Загрузить 10000 NFT в IPFS", "url": "/posts/NFT-Contract-10000/", "categories": "Solidity, NFT", "tags": "contracts", "date": "2022-05-08 21:50:00 +0300", "snippet": "Контракт по запуску множества NFT с гибкой настройкой параметров. HashLipsКод контракта NFT.sol// SPDX-License-Identifier: GPL-3.0// My revision of HashLips code /** These contracts have been used to create tutorials, please reviiew this code on your own before using any of the following code for production.*/pragma solidity &amp;gt;=0.7.0 &amp;lt;0.9.0;import &quot;@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol&quot;;import &quot;@openzeppelin/contracts/access/Ownable.sol&quot;;contract NFT is ERC721Enumerable, Ownable { using Strings for uint256; string public baseURI; string public baseExtension = &quot;.json&quot;; uint256 public cost = 0.05 ether; uint256 public maxSupply = 10000; uint256 public maxMintAmount = 20; bool public paused = false; mapping(address =&amp;gt; bool) public whitelisted; constructor( string memory _name, string memory _symbol, string memory _initBaseURI ) ERC721(_name, _symbol) { setBaseURI(_initBaseURI); mint(msg.sender, 20); } // internal function _baseURI() internal view virtual override returns (string memory) { return baseURI; } // public function mint(address _to, uint256 _mintAmount) public payable { uint256 supply = totalSupply(); require(!paused); require(_mintAmount &amp;gt; 0); require(_mintAmount &amp;lt;= maxMintAmount); require(supply + _mintAmount &amp;lt;= maxSupply); if (msg.sender != owner()) { if(whitelisted[msg.sender] != true) { require(msg.value &amp;gt;= cost * _mintAmount); } } for (uint256 i = 1; i &amp;lt;= _mintAmount; i++) { _safeMint(_to, supply + i); } } function walletOfOwner(address _owner) public view returns (uint256[] memory) { uint256 ownerTokenCount = balanceOf(_owner); uint256[] memory tokenIds = new uint256[](ownerTokenCount); for (uint256 i; i &amp;lt; ownerTokenCount; i++) { tokenIds[i] = tokenOfOwnerByIndex(_owner, i); } return tokenIds; } function tokenURI(uint256 tokenId) public view virtual override returns (string memory) { require( _exists(tokenId), &quot;ERC721Metadata: URI query for nonexistent token&quot; ); string memory currentBaseURI = _baseURI(); return bytes(currentBaseURI).length &amp;gt; 0 ? string(abi.encodePacked(currentBaseURI, tokenId.toString(), baseExtension)) : &quot;&quot;; } //only owner function setCost(uint256 _newCost) public onlyOwner { cost = _newCost; } function setmaxMintAmount(uint256 _newmaxMintAmount) public onlyOwner { maxMintAmount = _newmaxMintAmount; } function setBaseURI(string memory _newBaseURI) public onlyOwner { baseURI = _newBaseURI; } function setBaseExtension(string memory _newBaseExtension) public onlyOwner { baseExtension = _newBaseExtension; } function pause(bool _state) public onlyOwner { paused = _state; } function whitelistUser(address _user) public onlyOwner { whitelisted[_user] = true; } function removeWhitelistUser(address _user) public onlyOwner { whitelisted[_user] = false; } function withdraw() public payable onlyOwner { require(payable(msg.sender).send(address(this).balance)); }}Последняя функция может выглядеть так:function withdraw() public payable onlyOwner { // This will pay HashLips 5% of the initial sale. // You can remove this if you want, or keep it in to support HashLips and his channel. // ============================================================================= (bool hs, ) = payable(0x943590A42C27D08e3744202c4Ae5eD55c2dE240D).call{value: address(this).balance * 5 / 100}(&quot;&quot;); require(hs); // ============================================================================= // This will payout the owner 95% of the contract balance. // Do not remove this otherwise you will not be able to withdraw the funds. // ============================================================================= (bool os, ) = payable(owner()).call{value: address(this).balance}(&quot;&quot;); require(os); // ============================================================================= }HardHatdeploy.tsimport { ethers, run } from &#39;hardhat&#39;import { NFT__factory } from &#39;../typechain&#39;async function main() { const [signer] = await ethers.getSigners() const NFT = await ethers.getContractFactory(&quot;NFT&quot;, signer) const nft = await NFT.deploy(&quot;Mahoori&quot;, &quot;MHR&quot;, &quot;ipfs://QmeJ88g5bir68WAYBE6qxgj3f3JEmjhrKhmbohR5Qc6aSy/&quot;)}main().catch((error) =&amp;gt; { console.error(error) process.exitCode = 1})Верификация в командной строке с передачей аргументов:npx hardhat verify --network rinkeby 0x92B7141527ce02576446c922e6a1bA176B199C88 Mahoori MHR ipfs://QmeJ88g5bir68WAYBE6qxgj3f3JEmjhrKhmbohR5Qc6aSy/" }, { "title": "Настройка сетей для HardHat. Polygon, Rinkeby, Mumbai, ...", "url": "/posts/HardHat-Networks-Configuration/", "categories": "Solidity", "tags": "рабочая среда", "date": "2022-05-08 21:50:00 +0300", "snippet": "Копии файлов HardHat hardhat.config.ts для быстрой настройки различных сетей. +Основные комманды консоли для компиляции, деплоя, верификации, очистки.Mumbaihardhat.config.tsimport * as dotenv from &#39;dotenv&#39;import { HardhatUserConfig } from &#39;hardhat/config&#39;import &#39;@nomiclabs/hardhat-etherscan&#39;import &#39;@nomiclabs/hardhat-waffle&#39;import &#39;@typechain/hardhat&#39;import &#39;hardhat-gas-reporter&#39;import &#39;solidity-coverage&#39;dotenv.config()const config: HardhatUserConfig = { solidity: &#39;0.8.4&#39;, networks: { polygon: { url: &#39;https://rpc-mumbai.maticvigil.com/&#39;, accounts: process.env.PRIVATE_KEY !== undefined ? [process.env.PRIVATE_KEY] : [] } }, etherscan: { apiKey: { polygonMumbai: process.env.POLYGONSCAN_API_KEY } }}export default configRinkebyimport * as dotenv from &#39;dotenv&#39;import { HardhatUserConfig } from &#39;hardhat/config&#39;import &#39;@nomiclabs/hardhat-etherscan&#39;import &#39;@nomiclabs/hardhat-waffle&#39;import &#39;@typechain/hardhat&#39;import &#39;hardhat-gas-reporter&#39;import &#39;solidity-coverage&#39;dotenv.config()const config: HardhatUserConfig = { solidity: &#39;0.8.4&#39;, networks: { rinkeby: { url: process.env.ALCHEMY_KEY, accounts: process.env.PRIVATE_KEY !== undefined ? [process.env.PRIVATE_KEY] : [] } }, etherscan: { apiKey: process.env.ETHERSCAN_API_KEY }}export default configALCHEMY_KEY=https://eth-rinkeby.alchemyapi.io/v2/ключ из сайта alchemyETHERSCAN_API_KEY=ключ для езерскана может быть не обязательнымPRIVATE_KEY=нужен обязательно для верификацииОсновные комманды HardHatочистить старые компилированные версииnpx hardhat cleanкомпилировать файл-контракт .solnpx hardhat compileдеплой смартконтрактаnpx hardhat run scripts/deploy.ts --network rinkebyверификация смартконтрактаnpx hardhat verify --network mainnet DEPLOYED_CONTRACT_ADDRESSВерификация в командной строке с передачей аргументов:npx hardhat verify --network rinkeby 0x92B7141527ce02576446c922e6a1bA176B199C88 Mahoori MHR ipfs://QmeJ88g5bir68WAYBE6qxgj3f3JEmjhrKhmbohR5Qc6aSy/" }, { "title": "Проникающее Качество Прямого Осознавания", "url": "/posts/penetrating-quality-awareness/", "categories": "Публикации", "tags": "осознание", "date": "2022-01-25 17:10:00 +0300", "snippet": "Используя, проникающее качество прямого осознавания, мы можем стать чувствительными к нашим эмоциям прежде их проявления и таким образом разрушить шаблоны привычек и нашего с ними отождествления.Осознавание всегда находится в пределах доступа в нас самих, внутри нашей энергии. Но когда мы сбиты с толку, запутаны или эмоционально пойманы в ловушку, у нас может не оказаться никаких идей относительно того, что в действительности происходит внутри нас. Все происходит как во сне, и мы можем вдруг обнаружить, как меняем одну деятельность за другой, мрачны и озабоченны или возможно, привязываемся к ложному чувству спонтанности и свободы, в другое время застаем себя за бесконечным размышлением о прошлом или будущем, в борьбе с текущими “проблемами”, неадекватностью, нерешительностью, самообманом, страхами, слепыми увлечениями, чувством вины, — наши энергии оказываются настолько серьезно пойманы различными эмоциональными ловушками, что мы чувствуем себя запутанными, усталыми, наполненными напряжением и тревогами. Работая с этими эмоциями в медитации, можно научиться выходить…У эмоций нет ни слез, ни рта, ни желудка, И тем не менее, они могут высасывать из нас энергию, гипнотизировать, разрушать наше естественное состояние равновесия. У эмоций есть сила заманить нас в искусственные области ощущений, которые способны захватить контроль над нашими положительными энергиями. Оказывается, что люди испытывают нужду в эмоциях подобно тому, как они нуждаются в соли для пищи. Но эмоции опасны и нестабильны, поэтому то, что начинается как удовольствие, часто заканчивается болью, И когда мы находимся в центе эмоциональной ситуации, то можем оказаться ослепленными динамикой ситуации настолько, что наши восприятия и предвкушение омрачаются.Одной из наиболее трудных в управлении эмоцией является тревога. На поверхностном уровне она не кажется такой уж серьезной проблемой, но тогда, когда это касается нашего человеческого сознания, она может расстроить нашу медитативную открытость до такой степени, что мы полностью утрачиваем равновесие. Мы даем ускользнуть положительным возможностям, теряя осознавание, тревога давит на нас, создает разделение, замешательство и неудовлетворенность. Если мы не следим внимательно за своей тревогой, то становится все труднее управлять ею.Нужда может оказаться весьма требовательной. Мы непрерывно испытываем потребность в том, чтобы удовлетворять и меня, мое эго, мои ум, чувства, ощущения. Отсутствие уверенности заставляет нас чувствовать потребность в поддержке или стимуляции — посредством друзей, интеллектуальных восприятий или материальных объектов. Иногда мы не получаем таких контактов, и тогда можем почувствовать себя настолько одинокими и лишенными поддержки, что тревога уносит из тела буквально всю энергию. Когда же энергия ушла, мы ощущаем себя опустошенными, подавленными и даже иногда впадаем в отчаяние.Оказывается, что мы знаем только один путь поиска удовлетворения и заполнения себя — путь бесконечно страстного стремления. Хотя мы иногда и умудряемся временно удовлетворить свои желания, но обычно удовлетворение длится лишь короткое время, и мы остаемся разочарованными, что ведет к еще большим тревогам. Большинство людей испытывают тревогу. Желание и владенье подобны свече, а тревоги подобны пламени. Слово, обозначающее эту непрерывную фрустрации — сансара — означает, что мы неудоволетворены и несчастны, потому что редко получаем то, что хотим. Мы все время идем, двигаясь к тому, что лежит вне нас.Если в нас недостает уверенности в себе, то наша жизнь проходит однообразно день за днем, лишенная значения и ценности. В конце концов, мы понимаем, что не можем позволить себе потратить всю жизнь качаясь между удовольствием и болью, и что истинная полнота приходит тогда, когда оставлено стремление владеть и найдено удовлетворение внутри самих себя.Не важно, как выглядит наша жизнь на поверхности, проблемы всегда существуют на более глубоких, тонких уровнях сознания. Есть разные способы, которые можно использовать, чтобы вынести их на поверхность, но как только мы думаем, что решили одну проблему, возникает еще больше фрустраций и неудовлетворения. Это похоже на рытье в песке на берегу — стоит только вычерпать пригоршню воды, как ее просачивается еще больше. Так что мы просто оказываемся пойманными бесконечной вереницей проблем, временных решений и еще больших проблем. Мы можем облегчить некоторое поверхностное напряжение эмоциональным взрывом и после него можем даже почувствовать себя легче и раскованнее. Но это скорее похоже на перетаскивание груза с одного места на другое, проблемы все еще остаются, даже если мы и хотим уверить себя в изменении к лучшему. Поскольку не разрешены лежащие в основании причины, продолжают возникать те же проблемы и паттерны.Мы можем решить бороться с этими отрицательными силами, но часто борьба лишь продлевает отрицательные энергии и еще больше отчуждает нас от самих себя. Оказывается, чем больше мы сражаемся со своей отрицательностью, тем сильнее она становится.Итак, мы хотели бы отыскать положительный подход к нашим проблемам. Но прежде следует понять, что сознание — это лишь совокупность привычных паттернов. Не важно, насколько устойчивыми и фиксированными они могут показаться, паттерны не являются ни устойчивыми, ни субстанциональными, — мы можем изменить и перестроить их. Отрицательные реакции создают силы, формирующие паттерны, но эти паттерны могут быть разрушены. Когда мы понимаем пути, какими действуют внутри нас эти паттерны, и когда начинается процесс пробуждения осознавания, тогда осознавание проникает и трансформирует наши проблемы и препятствия. Если мы внимательны вместо того, чтобы утратить себя в конфликтах или в потакании себе в страдании, в проклинании себя, в самооправдывающей меланхолии, то мы легко и скоро сможем со стороны увидеть проблемы свои и находящиеся за ними, и трансформировать отрицательную энергию в положительную. Это требует некоторой практики, но когда мы воспользуемся подлинным осознаванием, чтобы научиться видеть и быстро менять разрушительные ситуации, наши проблемы прояснятся, а внутри нас начнет расти мир и свет.Когда проблемы возникают во время медитации или в повседневной жизни, а мы захвачены эмоцией или пойманы привычным шаблоном поведения, что заставляет нас страдать, — это как раз время для практики искренности, открытости и равновесия, время пробуждения полной внимательности. К примеру, если мы, будучи очень рассержены или печальны, должным образом сосредоточиваемся на эмоции, интенсивно разглядывая ее сверху донизу, а затем глядя на нее прямо, — она может на самом деле исчезнуть, поскольку мы видим, что она в действительности “ничто”. Приобретя опыт, мы можем быстро уравновесить ситуацию депрессии или фрустрации, переключая ум туда и обратно, делая его то счастливым, то несчастным, а затем снова счастливым, наблюдая все время, что происходит внутри нас. Сначала мы можем делать что-то положительное, а затем отрицательное. Один раз подключить ум к депрессии и плакать. Затем немедленно подключиться к смеху. Чем же в действительности являются эти эмоции? Почему мы должны подчиняться этим чередующимся ментальным состояниям?Это упражнение может показаться почти шизофреническим, но по мере работы над ним мы обнаруживаем, что в нашем сознании происходит важное изменение: меняются также наши взгляды на самих себя и на жизнь. Печаль не так серьезна, а счастье не столь безобидно и беззаботно.Жизнь движется и меняется быстрее, чем даже несколько лет назад. Множество удивительных и очаровывающих вещей случается ежедневно — все это весьма прелестный танец, и каждой ситуации, любой деятельности, всякой мысли найдется место в нашей практике. Любое переживание может показать нам, как глупо быть столь серьезным и принимать вещи так драматически, что даже наши трудности можно оставить позади, поскольку нет ничего постоянного.Однако вместе с тем это понимание не так просто реализовать практически. Мы так связаны отрицательными привычками, что можем даже оказаться перед лицом увеличивающихся отрицательных эмоций, даже не подозревая, что идем к ним. Когда мы несознательны, огорчены, подавлены или несчастны, то похожи на пчел, пойманных в горшке, где они жужжат, неустанно кружась и не имея путей бегства. И все же, мы пойманы неокончательно. Наши эмоциональные проблемы и отрицательное отношение являются в определенной степени частью нашего процесса обучения.Путем осознавания мы можем стать чувствительными к своим эмоциям по мере их возникновения и тем самым начать разрушение своих эмоциональных шаблонов и привязанностей к ним. Чем более растет .чаше осознавание, тем больше времени оказывается у нас для положительных действий — три недели для осознающего человека то же самое, что три месяца для того, кто лишен такого осознавания. Когда мы напоминаем себе о необходимости поддерживать наши тело и ум в гармонии со своим осознаванием, то улавливаем каждое изменение наших мыслей и настроений и можем вспомнить, что нужно ввести свое осознавание немедленно в самую сердцевину всякой ситуации, которая может поколебать наше равновесие.Эта практика подобна обучению плаванию. Осваивая начальные приемы, постепенно с практикой мы окажемся способными плавать не просто пять или десять минут, а столько, сколько захотим. Подобным же образом мы сможем развить непрерывную медитацию, если будем поддерживать открытое отношение ко всякой деятельности, в которую вовлечены.Поскольку сознательно или неосознанно тревога является причиной многих наших проблем, важно иметь с ней дело, как только она появляется. Лучшее противоядие против тревоги — это медитация. Когда мы осваиваем управление эмоциями с помощью медитации, то оказываемся менее обремененными проблемами, наши тело и ум становятся совершенно спокойными, и тревога начинает растворяться в спокойной релаксации и тишине. Тогда мы можем начать работать с нашими проблемами непосредственно, поскольку больше не чувствуем необходимости бежать от них. Напряженность и задержки уходят естественно. Таким образом мы более не находимся в цикле страстных стремлений и тревог и можем радоваться жизни. Это первая стадия медитации.Тартанг Тулку Ринпоче “Жест равновесия”" }, { "title": "Текст и Типографика", "url": "/posts/text-and-typography/", "categories": "Справка, Демо", "tags": "типографика", "date": "2022-01-19 11:33:00 +0300", "snippet": "Этот пост призван показать рендеринг синтаксиса Markdown, вы также можете использовать его в качестве примера написания текста. Итак, давайте начнем рассматривать текст и типографику.НазванияH1 - заголовокH2 - заголовокH3 - заголовокH4 - заголовокПараграфЯ бродил одиноко, как облако.Что плывет высоко над долинами и холмами,И вдруг я увидел толпу,толпу золотых нарциссов;На берегу озера, под деревьями,Трепещущих и танцующих на ветру.СпискиУпорядоченный список Первый Второй ТретийНеупорядоченный список Глава Раздел Параграф Список задач Список Дел Завершено Победить COVID-19 Производство вакцин Восстановление экономики Люди снова улыбаются Список описаний Солнце звезда, вокруг которой вращается Земля Луна естественный спутник Земли, видимый в отраженном свете от СолнцаБлок-цитата В этой строке отображается Блок-цитата.Подсказки Пример отображения подсказки типа tip. Пример отображения подсказки типа info. Пример отображения подсказки типа warning. Пример отображения подсказки типа danger.Таблицы Компания Контакт Страна Новый Дом Мария Иванова Россия Island Trading Хеленн Беннет Канада Magazzini Alimentari Riuniti Гиованни Андерс Италия Ссылкиhttp://127.0.0.1:4000СноскиЩелкните по крючку, и вы найдете сноску1, а вот еще одна сноска2.Изображения По умолчанию (с надписью)Выравнивание по всей ширине экрана и по центру Теньэффект тени (виден в режиме света) Выровненные по левому краю Влево “ Часто бывает так, что смысл текста не имеет большого значения, а важен только его объем или структура. Генератор текста онлайн позволит задать необходимое количество слов, из которых будут сформировано указанное Вами число абзацев. Правда, смысл сгенерированный текст иметь не будет, но ведь этого нам и не требуется! Бессмысленный текст используется для заполнения пространства. Классическая проза, бизнес, юмор и многие другие темы. “ Вправо “ Часто бывает так, что смысл текста не имеет большого значения, а важен только его объем или структура. Генератор текста онлайн позволит задать необходимое количество слов, из которых будут сформировано указанное Вами число абзацев. Правда, смысл сгенерированный текст иметь не будет, но ведь этого нам и не требуется! Бессмысленный текст используется для заполнения пространства. Классическая проза, бизнес, юмор и многие другие темы. “ Русалка - это язык разметки для создания диаграмм и блок-схем gantt title Добавление функциональности диаграммы GANTT в Русалку apple :a, 2017-07-20, 1w banana :crit, b, 2017-07-23, 1d cherry :active, c, after b a, 1dМатематикаМатематика, основанная на MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]Когда $a \\ne 0$, есть два решения $ax^2 + bx + c = 0$ и они следующие\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Встроенный кодЭто пример Встроенный код.Блок кодаОбщийЭто обычный фрагмент кода, без подсветки синтаксиса и номера строки.Специфические языкиConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then echo &quot;The command was not successful.&quot;; #do the needful / exitfi;Определенное имя файла@import &quot;colors/light-typography&quot;, &quot;colors/dark-typography&quot;Обратные сноски Источник сноски &amp;#8617; Источник 2-й сноски &amp;#8617; " }, { "title": "Как Писать Новый Пост", "url": "/posts/write-a-new-post/", "categories": "Справка, Руководство", "tags": "написание", "date": "2022-01-19 09:10:00 +0300", "snippet": "В этой статье вы узнаете, как написать сообщение. Даже если у вас уже есть опыт работы с Jekyll, эту статью стоит прочитать, потому что многие функции требуют установки определенных переменных.Название и путьСоздайте новый файл с именем YYYY-MM-DD-TITLE.EXTENSION и поместите его в _posts корневого каталога. Обратите внимание, что РАСШИРЕНИЕ может быть только md или markdown. Если вы хотите сэкономить время на создании файлов, пожалуйста, воспользуйтесь плагином Jekyll-Compose.Метаданные YAMLИзначально, вам необходимо заполнить Front Matter как указано ниже в верхней части поста:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [Топ_Категория, Под_Категория]tags: [тег] # ТЕГИ всегда должны быть в нижнем регистре--- Примечание: По умолчанию’ layout постов установлен на post поэтому нет необходимости добавлять переменную layout в блок Front Matter.Часовой пояс датыДля точного учета даты выхода поста необходимо не только установить timezone в _config.yml, но и указать часовой пояс поста в переменной date блока Front Matter. Формат: +/-TTTT, например, +0800.Категории и тегиcategories каждого поста могут содержать до двух элементов, а количество элементов в tags может быть от нуля до бесконечности. Например:---categories: [Животное, Насекомое]tags: [пчела]---Информация об автореИнформацию об авторе поста обычно не нужно заполнять в Front Matter, она будет получена из переменных social.name и первой записи social.links конфигурационного файла по умолчанию. Но вы также можете переопределить это следующим образом:---author: name: Полное Имя link: https://example.com---ОглавлениеПо умолчанию Table of Contents (TOC) отображается на правой панели поста. Если вы хотите отключить его глобально, перейдите в _config.yml и установите значение переменной toc в false. Если вы хотите отключить TOC для конкретного поста, добавьте следующее в Front Matter поста:---toc: false---КомментарииГлобальное включение комментариев определяется переменной comments.active в файле _config.yml. После выбора системы комментариев для этой переменной, комментарии будут включены для всех постов.Если вы хотите закрыть комментарии для конкретного сообщения, добавьте следующее в Front Matter сообщения:---comments: false---МатематикаПо причинам производительности сайта, математическая функция не будет загружена по умолчанию. Но ее можно включить:---math: true---РусалкаMermaid - это отличный инструмент для генерации диаграмм. Чтобы включить его в вашем посте, добавьте следующее в блок YAML:---mermaid: true---Затем вы можете использовать его как другие языки разметки: окружите код графа символами ```mermaid and ```.ИзображенияПодписьДобавьте курсив в следующую строку изображения, тогда она станет подписью и появится внизу изображения:![img-description](/path/to/image)_Подпись изображения_РазмерЧтобы предотвратить смещение макета содержимого страницы при загрузке изображения, мы должны задать ширину и высоту для каждого изображения:![Desktop View](/assets/img/sample/mockup.png){: width=&quot;700&quot; height=&quot;400&quot; }Начиная с Chirpy v5.0.0, height и width поддерживают сокращения (height → h, width → w). Следующий пример имеет тот же эффект, что и приведенный выше:![Desktop View](/assets/img/sample/mockup.png){: w=&quot;700&quot; h=&quot;400&quot; }ПоложениеПо умолчанию изображение центрируется, но вы можете указать положение, используя один из классов normal, left и right. Например: Normal position Image will be left aligned in below sample: ![Desktop View](/assets/img/sample/mockup.png){: .normal } Float to the left ![Desktop View](/assets/img/sample/mockup.png){: .left } Float to the right ![Desktop View](/assets/img/sample/mockup.png){: .right } Ограничение: После указания позиции изображения надпись к нему добавлять не следует.ТеньНа скриншотах окна программы можно рассмотреть эффект тени, причем тень будет видна в режиме свет:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLЕсли вы размещаете изображения на CDN, вы можете сэкономить время на многократном написании URL CDN, назначив переменную img_cdn в файле _config.yml:img_cdn: https://cdn.comПосле назначения img_cdn, URL CDN будет добавлен к пути всех изображений (изображений аватара сайта и постов), начинающихся с /.Например, при использовании изображений:![The flower](/path/to/flower.png)Результат парсинга автоматически добавит префикс CDN https://cdn.com перед путем к изображению:&amp;lt;img src=&quot;https://cdn.com/path/to/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Путь изображенияКогда пост содержит много изображений, многократное определение пути к ним будет отнимать много времени. Чтобы решить эту проблему, мы можем определить этот путь в блоке YAML поста:---img_path: /img/path/---И тогда источник изображений в Markdown может записывать имя файла напрямую:![The flower](flower.png)Вывод будет следующим:&amp;lt;img src=&quot;/img/path/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Изображение для предварительного просмотраЕсли вы хотите добавить изображение в верхнюю часть содержимого поста, укажите для него атрибуты src, width, height и alt:---image: src: /path/to/image/file width: 1000 # in pixels height: 400 # in pixels alt: image alternative text---За исключением alt, все остальные параметры необходимы, особенно width и height, которые связаны с удобством использования и производительностью загрузки веб-страницы. Об этом также говорится в разделе “размер”.Атрибуты height и width могут быть сокращены: width → h, height → w. Кроме того, путь_изображения также может быть передан изображению предварительного просмотра, то есть, когда он установлен, атрибуту src нужно только имя файла изображения.Закрепленные постыВы можете закрепить одно или несколько сообщений в верхней части главной страницы, при этом закрепленные сообщения будут отсортированы в обратном порядке по дате их выхода. Включить это так:---pin: true---Кодовый блокСимволы Markdown ``` могут легко создать блок кода следующим образом:Это фрагмент кода в открытом виде.Указание языкаИспользуя ```{language} вы получите блок кода с подсветкой синтаксиса:```yamlkey: value``` Ограничение: Тег highlight стиля Jekyll не совместим с этой темой.Номер строкиПо умолчанию все языки, кроме plaintext, console и terminal, отображают номера строк. Когда вы хотите скрыть номер строки блока кода, вы можете добавить {: .nolineno} в следующей строке:```shellecho &#39;No more line numbers!&#39;```{: .nolineno}Указание имени файлаВы могли заметить, что язык кода отображается в левой части заголовка блока кода. Если вы хотите заменить его именем файла, вы можете добавить атрибут file для достижения этой цели:```shell# content```{: file=&quot;path/to/file&quot; }Liquid CodesЕсли вы хотите отобразить фрагмент Liquid, окружите код liquid символами {% raw %} и {% endraw %}:{% raw %}```liquid{% если product.title содержит &#39;Pack&#39; %} В названии этого продукта содержится слово Pack.{% endif %}```{% endraw %}Или добавьте render_with_liquid: false (Требуется Jekyll 4.0 или выше) в YAML-блок поста…CDN хранилищеЧтобы добавить картинку в публикацию нужно залить её в репозиторий cdn, в папку pic, и как путь указать только её название + расширение.https://cdn.jsdelivr.net/gh/denilev/cdn/pic/raven.jpghttps://cdn.jsdelivr.net/gh/GHuser/repo/folder/file.jpgЧтобы обновить кеш CDN хранилища нужно заменить в ссылке cdn на purge как в примере ниже:https://cdn.jsdelivr.net/gh/denilev/cdn/pic/raven.jpghttps://purge.jsdelivr.net/gh/denilev/cdn/pic/raven.jpgИнструкция по добавлению изображения/файла в CDN хранилище: Загрузить картинку в репозиторий CDN, в папку pic или nft на github: https://github.com/denilev/cdn/tree/main/pic Сделать обновление(purge) ссылки - для этого нужно перейти по адресу: https://purge.jsdelivr.net/gh/denilev/cdn/pic/img_name.jpg После перехода по ссылке выше⬆️, картинка быдет доступна по адресу: https://cdn.jsdelivr.net/gh/GHuser/repo/folder/img_name.jpg ПодробнееДля получения дополнительных знаний о постах Jekyll посетите Jekyll Docs: Posts." } ]
